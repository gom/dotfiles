# key bind
bindkey -e

# prompt
setopt prompt_subst
#autoload -U colors && colors
setopt prompt_percent
setopt transient_rprompt
PROMPT="${USER}@${HOST} %(!.#.$) "

autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
precmd () {
    psvar=()
    LANG=C vcs_info >&/dev/null
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
RPROMPT="%1(v|%F{green}%1v%f|)"
RPROMPT+="[%~]"

setopt no_flow_control      # disabled C-s, C-q
setopt no_beep
setopt interactive_comments # behind '#' is comment in cmd line
WORDCHARS=${WORDCHARS:s,/,,}

# log
watch="all"    # watching login and logout
log
setopt no_tify # when bg job finish, notify me.
setopt nomatch
setopt ignore_eof # ignore logout when touch ^D

# job
setopt long_list_jobs
REPORTTIME=3

## auto complete
zstyle :compinstall filename '~/.zshrc'
autoload -Uz compinit
compinit
autoload bashcompinit
bashcompinit
[ -f ~/.gitcompletion.sh ] && source ~/.gitcompletion.sh
zstyle ':completion:*' format '%B%d%b'
zstyle ':completion:*' group-name ''
zstyle ':completion:*:default' menu select=2        #use emacs keybind
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z} r:|[._-]=*' # ignore case
zstyle ':completion:*' completer \
      _oldlist _complete _match _history _ignored _approximate _prefix
zstyle ':completion:*' use-cache yes
zstyle ':completion:*' verbose yes
zstyle ':completion:sudo:*' environ PATH="$SUDO_PATH:$PATH"
zstyle ':completion:*:default' list-colors ${LSCOLORS}
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([%0-9]#)*=0=01;31'

setopt complete_in_word
setopt glob_complete
setopt extended_glob
setopt numeric_glob_sort    # sort as numeric order
setopt mark_dirs            # add / when the path is directory
setopt hist_expand
setopt auto_list            # display autocomplete list by ^I
setopt list_types        # display file types in complete list
setopt auto_menu         # switch items by TAB
setopt magic_equal_subst # able to complete after '='
setopt print_eight_bit   # display Japanese


# moving directory
setopt auto_cd
setopt auto_pushd        # cd to pushd
setopt pushd_ignore_dups
setopt pushd_to_home     # pushd with no argument, go home.
cdpath=(~)
chpwd_functions=($chpwd_functions dirs) # display the stack of directories


## history
HISTFILE=~/.zsh_history
HISTSIZE=10000000
SAVEHIST=$HISTSIZE
function history-all { history -E 1 } # output all histories

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end

setopt extended_history     # write datetime to history
setopt append_history       # add .zsh_history
setopt inc_append_history   # add history with incremental
setopt hist_ignore_all_dups # when dups command on history, delete old one
setopt hist_ignore_dups     # ignore same cmd
setopt hist_ignore_space    # when cmd starting space, ignore history
setopt share_history
setopt hist_no_store        # no store in history, `history` cmd.
setopt hist_reduce_blanks
setopt hist_verify

## set alias
setopt complete_aliases

alias ll='ls -lhF'
alias la='ls -la'
alias grep='grep --color=auto'
alias ec='emacsclient -c -t'
alias em='emacs -nw -fs'

alias rr="command rm -rf"
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'

alias pd='pushd'
alias po='popd'
alias gd='dirs -v; echo -n "select number: "; read newdir; cd +"$newdir"'
alias lss='less -MN'

alias sc='screen'
alias sd='screen -D'
alias t='tmux'
alias ta='tmux attach'
alias td='tmux detach'
alias g='git'

alias re='ruby -e'
alias spec='spec -c -fs'

alias -g L='| less'
alias -g H='| head'
alias -g T='| tail'
alias -g G='| grep'
alias -g W='| wc'
alias -g S='| sed'
alias -g A='| awk'

alias utf='export LANG=ja_JP.UTF-8; export LANGUAGE=ja_JP.UTF-8; export LC_ALL=ja_JP.UTF-8'
alias en='export LANG=en; export LANGUAGE=en; export LC_ALL=en'
alias eucjp='export LANG=ja_JP.eucJP; export LANGUAGE=ja_JP.eucJP; export LC_ALL=ja_JP.eucJP'
alias sjis='export LANG=ja_JP.SJIS; export LANGUAGE=ja_JP.SJIS; export LC_ALL=ja_JP.SJIS'

grm() {
  git status | grep deleted: | awk '{ print $3 }' | xargs git rm
}

## others
umask 022
[ -s "`which screen`" ] && screen -r
[ -s "`which tmux`" ] && tmux attach

## rbenv settings
[ -s "`which rbenv`" ] && eval "$(rbenv init -)"

## ssh-agent
[ -e $HOME/.ssh/agent-env ] && source $HOME/.ssh/agent-env

## for Emacs Shell
[[ $EMACS = t ]] && unsetopt zle
## for tramp
case "$TERM" in
  dumb | emacs)
    PROMPT="%m:%~> "
    unsetopt zle
    ;;
esac
