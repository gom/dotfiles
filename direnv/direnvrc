show_virtual_env() {
  if [ -n "$VIRTUAL_ENV" ]; then
    echo "(virtualenv)"
  fi
}

PS1='$(show_virtual_env)'$PS1

# Usage: use pyenv <version>
# Loads the specified python version into the environment
#
use_pyenv() {
  local python_root=$HOME/.pyenv/versions/$1
  load_prefix "$python_root"
  layout_python "$python_root/bin/python"
}
layout_poetry() {
  if [[ ! -f pyproject.toml ]]; then
    log_error 'No pyproject.toml found. Use `poetry new` or `poetry init` to create one first.'
    exit 2
  fi

  # create venv if it doesn't exist
  poetry run true

  export VIRTUAL_ENV=$(poetry env info --path)
  export POETRY_ACTIVE=1
  PATH_add "$VIRTUAL_ENV/bin"
}


# Usage: Export function
# https://github.com/direnv/direnv/issues/73#issuecomment-152284914
# https://eidera.com/blog/2018/12/28/direnv_alias/

ALIASES_DIR=".direnv/aliases"
export_function() {
  local name=$1
  local alias_dir=$PWD/${ALIASES_DIR}
  mkdir -p "$alias_dir"
  PATH_add "$alias_dir"
  local target="$alias_dir/$name"
  if declare -f "$name" >/dev/null; then
    echo "#!/usr/bin/env bash" > "$target"
    declare -f "$name" >> "$target" 2>/dev/null
    echo "$name" '"$@"' >> "$target"
    chmod +x "$target"
  fi
}

clear_direnv_aliases() {
  local alias_dir=$PWD/${ALIASES_DIR}
  rm -rf $alias_dir/*
}
